// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamFightTacticsReviewApp.Data;

#nullable disable

namespace TeamFightTacticsReviewApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231122183600_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TeamFightTacticsReviewApp.Models.Champion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TacticId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TacticId");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("TeamFightTacticsReviewApp.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChampionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("TeamFightTacticsReviewApp.Models.Tactic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tactics");
                });

            modelBuilder.Entity("TeamFightTacticsReviewApp.Models.Champion", b =>
                {
                    b.HasOne("TeamFightTacticsReviewApp.Models.Tactic", null)
                        .WithMany("Champions")
                        .HasForeignKey("TacticId");
                });

            modelBuilder.Entity("TeamFightTacticsReviewApp.Models.Item", b =>
                {
                    b.HasOne("TeamFightTacticsReviewApp.Models.Champion", null)
                        .WithMany("Items")
                        .HasForeignKey("ChampionId");
                });

            modelBuilder.Entity("TeamFightTacticsReviewApp.Models.Champion", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TeamFightTacticsReviewApp.Models.Tactic", b =>
                {
                    b.Navigation("Champions");
                });
#pragma warning restore 612, 618
        }
    }
}
